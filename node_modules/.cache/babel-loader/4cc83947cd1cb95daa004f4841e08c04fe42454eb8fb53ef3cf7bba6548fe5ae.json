{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devik Nangia\\\\Desktop\\\\react\\\\tenzies\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  let [diceData, setDiceData] = React.useState([{\n    id: 1,\n    value: Math.floor(Math.random() * 6) + 1\n  }, {\n    id: 2,\n    value: Math.floor(Math.random() * 6) + 1\n  }, {\n    id: 3,\n    value: Math.floor(Math.random() * 6) + 1\n  }, {\n    id: 4,\n    value: Math.floor(Math.random() * 6) + 1\n  }, {\n    id: 5,\n    value: Math.floor(Math.random() * 6) + 1\n  }, {\n    id: 6,\n    value: Math.floor(Math.random() * 6) + 1\n  }, {\n    id: 7,\n    value: Math.floor(Math.random() * 6) + 1\n  }, {\n    id: 8,\n    value: Math.floor(Math.random() * 6) + 1\n  }, {\n    id: 9,\n    value: Math.floor(Math.random() * 6) + 1\n  }, {\n    id: 10,\n    value: Math.floor(Math.random() * 6) + 1\n  }]);\n  let [gameOverCheck, setGameOverCheck] = React.useState(false);\n  function generateRandom() {\n    // console.log(\"button clicked\")\n    setDiceData(oldData => oldData.map(data => {\n      if (frozen.includes(data.id)) {\n        return data;\n      }\n      return {\n        ...data,\n        value: Math.floor(Math.random() * 6) + 1\n      };\n    }));\n    SetTurns(old => old + 1);\n  }\n  let [turns, SetTurns] = React.useState(0);\n  let [count, setCount] = React.useState(0);\n  let dices = diceData.map(dice => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dice-button\",\n      onClick: event => {\n        freeze(dice.id, event);\n      },\n      children: dice.value\n    }, dice.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 16\n    }, this);\n  });\n  let [frozen, setFrozen] = React.useState([]);\n  function freeze(id, event) {\n    let targetNumberId = frozen[0];\n    let element = diceData.find(item => item.id === targetNumberId);\n    let targetNumber;\n    if (element) {\n      targetNumber = element.value;\n    }\n    console.log(targetNumber);\n    let currentNumberElement = diceData.find(item => item.id === id);\n    let currentNumber = currentNumberElement.value;\n    console.log(currentNumber);\n    if (frozen.length === 0 || frozen.length > 0 && currentNumber === targetNumber) {\n      setFrozen(old => {\n        return [...old, id];\n      });\n      setCount(oldCount => oldCount + 1);\n      event.target.disabled = \"true\";\n    }\n    console.log(count);\n    if (count === 9) {\n      setGameOverCheck(old => !old);\n    }\n  }\n  function resetGame() {\n    setCount(0);\n    setGameOverCheck(false);\n    console.log(gameOverCheck);\n    frozen.length = 0;\n    setFrozen(oldFrozen => {\n      return [];\n    });\n    setDiceData(oldData => {\n      return oldData.map(data => {\n        return {\n          ...data,\n          value: Math.floor(Math.random() * 6) + 1 // Generate new dice value\n        };\n      });\n    });\n    let buttons = document.querySelectorAll(\".dice-button\");\n    for (let button of buttons) {\n      console.log(button);\n      button.disabled = false;\n    }\n    SetTurns(0);\n    clearInterval(interval);\n  }\n  let [seconds, setSeconds] = React.useState(0.0);\n  React.useEffect(() => {\n    let interval;\n    if (true) {\n      let interval = setInterval(() => {\n        setSeconds(old => old + 0.1); // Increment by 0.1 for 100 ms updates\n      }, 100); // Update every 100 milliseconds\n    }\n\n    // Cleanup function to clear the interval on unmount\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"turns\",\n        children: turns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"seconds\",\n        children: seconds\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dice-container\",\n      children: dices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"roll-button-container\",\n      children: gameOverCheck ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Reset game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateRandom,\n        children: \"Roll dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 67\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"ui/IYWMvSkzbS+ohaXKpYjSwj44=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Game","_s","diceData","setDiceData","useState","id","value","Math","floor","random","gameOverCheck","setGameOverCheck","generateRandom","oldData","map","data","frozen","includes","SetTurns","old","turns","count","setCount","dices","dice","className","onClick","event","freeze","children","fileName","_jsxFileName","lineNumber","columnNumber","setFrozen","targetNumberId","element","find","item","targetNumber","console","log","currentNumberElement","currentNumber","length","oldCount","target","disabled","resetGame","oldFrozen","buttons","document","querySelectorAll","button","clearInterval","interval","seconds","setSeconds","useEffect","setInterval","_c","$RefreshReg$"],"sources":["C:/Users/Devik Nangia/Desktop/react/tenzies/src/Game.js"],"sourcesContent":["import React from \"react\"\r\n\r\nexport default function Game(){\r\n    \r\n    let [diceData, setDiceData] = React.useState([\r\n        {\r\n            id: 1,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        },\r\n        {\r\n            id: 2,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        },\r\n        {\r\n            id: 3,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        },\r\n        {\r\n            id: 4,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        },\r\n        {\r\n            id: 5,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        },\r\n        {\r\n            id: 6,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        },\r\n        {\r\n            id: 7,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        },\r\n        {\r\n            id: 8,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        },\r\n        {\r\n            id: 9,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        },\r\n        {\r\n            id: 10,\r\n            value: Math.floor(Math.random() * 6) + 1\r\n        }\r\n    ]);\r\n    \r\n    let [gameOverCheck, setGameOverCheck] = React.useState(false);\r\n\r\n    function generateRandom(){\r\n        // console.log(\"button clicked\")\r\n        setDiceData((oldData) =>\r\n            oldData.map((data) => {\r\n                if(frozen.includes(data.id)){\r\n                    return data\r\n                }\r\n                return {\r\n                    ...data, value: Math.floor(Math.random() * 6) + 1\r\n                }\r\n            })\r\n        )\r\n        SetTurns(old => old + 1)\r\n    }\r\n\r\n    let [turns, SetTurns] = React.useState(0)\r\n\r\n    let [count, setCount] = React.useState(0)\r\n\r\n    let dices = diceData.map((dice) => {\r\n        return <button className = \"dice-button\" key={dice.id} onClick={(event) => {freeze(dice.id, event)}}>{dice.value}</button>\r\n    })\r\n\r\n    let [frozen, setFrozen] = React.useState([])\r\n    \r\n    function freeze(id, event){\r\n        let targetNumberId = frozen[0];\r\n        let element = diceData.find(item => item.id === targetNumberId)\r\n        let targetNumber;\r\n        if(element){\r\n            targetNumber = element.value\r\n        }\r\n        console.log(targetNumber)\r\n        let currentNumberElement = (diceData.find(item => item.id === id))\r\n        let currentNumber = currentNumberElement.value\r\n        console.log(currentNumber)\r\n        if((frozen.length === 0) || (frozen.length > 0 && currentNumber === targetNumber)){\r\n            setFrozen((old) => {\r\n                return [...old, id]\r\n            })\r\n            setCount((oldCount) => oldCount + 1)\r\n            event.target.disabled = \"true\";\r\n        }\r\n\r\n        console.log(count);\r\n        if(count === 9){\r\n            setGameOverCheck((old) => !old);\r\n        }\r\n    }\r\n\r\n    function resetGame(){\r\n        setCount(0)\r\n        setGameOverCheck(false)\r\n        console.log(gameOverCheck)\r\n        frozen.length = 0;\r\n        setFrozen((oldFrozen) => {\r\n            return []\r\n        })\r\n        setDiceData((oldData) => {\r\n            return oldData.map((data) => {\r\n                return {\r\n                    ...data,\r\n                    value: Math.floor(Math.random() * 6) + 1 // Generate new dice value\r\n                };\r\n            });\r\n        })\r\n        let buttons = document.querySelectorAll(\".dice-button\")\r\n        for(let button of buttons){\r\n            console.log(button);\r\n            button.disabled = false;\r\n        }\r\n        SetTurns(0);\r\n        clearInterval(interval)\r\n    }\r\n\r\n    let [seconds, setSeconds] = React.useState(0.0);\r\n\r\n    React.useEffect(() => {\r\n        let interval;\r\n        if (true) {\r\n            let interval = setInterval(() => {\r\n                setSeconds(old => old + 0.1); // Increment by 0.1 for 100 ms updates\r\n            }, 100); // Update every 100 milliseconds\r\n        }\r\n\r\n        // Cleanup function to clear the interval on unmount\r\n        return () => clearInterval(interval);\r\n    }, []);\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"stats\">\r\n                <div id=\"turns\">{turns}</div> \r\n                <div id=\"seconds\">{seconds}</div> \r\n            </div>\r\n            <div id=\"dice-container\">\r\n                {dices}\r\n            </div>\r\n            <div id=\"roll-button-container\">\r\n                {gameOverCheck ? \r\n                <button onClick={resetGame}>Reset game</button> : <button onClick={generateRandom}>Roll dice</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}