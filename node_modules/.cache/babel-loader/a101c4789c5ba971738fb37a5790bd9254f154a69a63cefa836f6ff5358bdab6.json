{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Devik Nangia\\\\Desktop\\\\react\\\\tenzies\\\\src\\\\Game.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Game() {\n  _s();\n  let [diceData, setDiceData] = React.useState([{\n    id: 1,\n    value: 6\n  }, {\n    id: 2,\n    value: 6\n  }, {\n    id: 3,\n    value: 6\n  }, {\n    id: 4,\n    value: 6\n  }, {\n    id: 5,\n    value: 6\n  }, {\n    id: 6,\n    value: 6\n  }, {\n    id: 7,\n    value: 6\n  }, {\n    id: 8,\n    value: 6\n  }, {\n    id: 9,\n    value: 6\n  }, {\n    id: 10,\n    value: 6\n  }]);\n  function generateRandom() {\n    // console.log(\"button clicked\")\n    setDiceData(oldData => oldData.map(data => {\n      if (frozen.includes(data.id)) {\n        return data;\n      }\n      return {\n        ...data,\n        value: Math.floor(Math.random() * 6) + 1\n      };\n    }));\n  }\n  let dices = diceData.map(dice => {\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dice-button\",\n      onClick: event => {\n        freeze(dice.id, event);\n      },\n      children: dice.value\n    }, dice.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 16\n    }, this);\n  });\n  let [frozen, setFrozen] = React.useState([]);\n  let targetNumberId;\n  let targetNumber;\n\n  // console.log(targetNumber)\n\n  function freeze(id, event) {\n    setFrozen(old => {\n      return [...old, id];\n    });\n    targetNumberId = frozen[0];\n    let element = diceData.find(item => item.id === targetNumberId);\n    console.log(element);\n    event.target.disabled = \"true\";\n  }\n  console.log(frozen);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"stats\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"dice-container\",\n      children: dices\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"roll-button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: generateRandom,\n        children: \"Roll dice\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(Game, \"ei5Js1oAVL0g0/xBHIquC3IknpU=\");\n_c = Game;\nvar _c;\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Game","_s","diceData","setDiceData","useState","id","value","generateRandom","oldData","map","data","frozen","includes","Math","floor","random","dices","dice","className","onClick","event","freeze","children","fileName","_jsxFileName","lineNumber","columnNumber","setFrozen","targetNumberId","targetNumber","old","element","find","item","console","log","target","disabled","_c","$RefreshReg$"],"sources":["C:/Users/Devik Nangia/Desktop/react/tenzies/src/Game.js"],"sourcesContent":["import React from \"react\"\r\n\r\nexport default function Game(){\r\n    \r\n    let [diceData, setDiceData] = React.useState([\r\n        {\r\n            id: 1,\r\n            value: 6\r\n        },\r\n        {\r\n            id: 2,\r\n            value: 6\r\n        },\r\n        {\r\n            id: 3,\r\n            value: 6\r\n        },\r\n        {\r\n            id: 4,\r\n            value: 6\r\n        },\r\n        {\r\n            id: 5,\r\n            value: 6\r\n        },\r\n        {\r\n            id: 6,\r\n            value: 6\r\n        },\r\n        {\r\n            id: 7,\r\n            value: 6\r\n        },\r\n        {\r\n            id: 8,\r\n            value: 6\r\n        },\r\n        {\r\n            id: 9,\r\n            value: 6\r\n        },\r\n        {\r\n            id: 10,\r\n            value: 6\r\n        }\r\n    ]);\r\n    \r\n    function generateRandom(){\r\n        // console.log(\"button clicked\")\r\n        setDiceData((oldData) =>\r\n            oldData.map((data) => {\r\n                if(frozen.includes(data.id)){\r\n                    return data\r\n                }\r\n                return {\r\n                    ...data, value: Math.floor(Math.random() * 6) + 1\r\n                }\r\n            })\r\n        );\r\n    }\r\n\r\n    let dices = diceData.map((dice) => {\r\n        return <button className = \"dice-button\" key={dice.id} onClick={(event) => {freeze(dice.id, event)}}>{dice.value}</button>\r\n    })\r\n\r\n    let [frozen, setFrozen] = React.useState([])\r\n\r\n    let targetNumberId;\r\n    let targetNumber;\r\n    \r\n    // console.log(targetNumber)\r\n\r\n    function freeze(id, event){\r\n        setFrozen((old) => {\r\n            return [...old, id]\r\n        })\r\n        targetNumberId = frozen[0];\r\n        let element = diceData.find(item => item.id === targetNumberId)\r\n        console.log(element)\r\n        event.target.disabled = \"true\";\r\n    }\r\n\r\n    console.log(frozen)\r\n\r\n    return(\r\n        <div>\r\n            <div id=\"stats\"></div>\r\n            <div id=\"dice-container\">\r\n                {dices}\r\n            </div>\r\n            <div id=\"roll-button-container\">\r\n                <button onClick={generateRandom}>Roll dice</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}